source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
# 使用dim()查看df的維度(列數與欄數)
dim(df)
# 使用summary()查看df的描述性統計
summary(df)
# 使用str()查看df的詳細資訊
str(df)
# 將df$School與df$Sex轉為factor型態
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
### Part II - 資料框整理技巧I #######################################################
# 請注意vector特性：
# 向量物件只能接受一種類別，若給定多種類別會依[字串>數值>布林]進行自動轉換
# 這使得kobe資料內的型態都被轉存為chr了
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
# 使用cbind()，新增Height與Weight至df為欄(column)資料
df <- cbind(df, Height,Weight)
# 使用cbind()，新增Height與Weight至df為欄(column)資料
df <- cbind(df, Height,Weight)
# 使用cbind()，新增Height與Weight至df為欄(column)資料
df <- cbind(df,Height,Weight)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
# 使用rbind()，新增kobe至df為列(row)資料
df <- rbind(df,Kobe)
### Part I - 讀取資料與查看資料框內容 ##############################################
# 使用read.table()讀取test_data.csv
# 請注意sep, header的用途, 以及stringsAsFactors = F的影響
df <- read.table("test_data.csv", sep = ",", header = T, stringsAsFactors = F)
# 使用dim()查看df的維度(列數與欄數)
dim(df)
# 使用cbind()，新增Height與Weight至df為欄(column)資料
df <- cbind(df,Height,Weight)
# 使用rbind()，新增kobe至df為列(row)資料
df <- rbind(df,Kobe)
# 重新使用str()檢查一次df的結構時...
# Age, Grade, Height, Weight都變成chr型態了?? <- 被kobe資料
str(df)
# kobe的Grade資料出現了NA值，請將其重新設定為990分。
df$Grade[11] <- 990
# 轉換df欄位的資料型態 # Grade: integer, Age, Height, Weight: numeric
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
# 查看df結構，是否是轉換完畢結果
str(df)
# 使用order()，以df$Grade將df遞減排序
df <- df[order(df$Grade, decreasing = TRUE), ]
df
# 使用subset()，刪除df$Age欄位(另一種方式df$Age <- NULL)
df <- subset(df, select = c(Age))
df
# 使用subset()，刪除df$Age欄位(另一種方式df$Age <- NULL)
df <- subset(df, select = c(-Age))
# 不使用subset()，篩選出df中School A的人。
df[df$School == "A", ]
# 查看df結構，是否是轉換完畢結果
str(df)
# 重新使用str()檢查一次df的結構時...
# Age, Grade, Height, Weight都變成chr型態了?? <- 被kobe資料
str(df)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
# 不使用subset()，篩選出df中School A的人。
df[df$School == "A", ]
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
# 使用merge()，將df.sport資料與df進行連結後更新至df，並設定all.x = T保留所有資料
# 參考https://joe11051105.gitbooks.io/r_basic/content/arrange_data/merge_and_subsetting.html
df.sport
# 使用merge()，將df.sport資料與df進行連結後更新至df，並設定all.x = T保留所有資料
# 參考https://joe11051105.gitbooks.io/r_basic/content/arrange_data/merge_and_subsetting.html
df
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
# 使用merge()，將df.sport資料與df進行連結後更新至df，並設定all.x = T保留所有資料
# 參考https://joe11051105.gitbooks.io/r_basic/content/arrange_data/merge_and_subsetting.html
df
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
### Part III - 資料框整理技巧II #####################################################
View(df)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
