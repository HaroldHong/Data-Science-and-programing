source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/course.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/test.R', echo=TRUE)
source('C:/Users/Harold/Desktop/test.R', echo=TRUE)
install.packages(xlxs)
install.packages("xlsx")
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
files <- list.files(datDir, pattern = ".xlsx",full.names=T)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
mydataframe
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'BIG5', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week2/course_2/practice_2.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
g <- ggplot(selectdata,aes(assessment),color = times)
g <- ggplot(selectdata,aes(assessment))
+ scale_fill_brewer(palette = "Spectral")
g <- ggplot(selectdata,aes(assessment),color = times) + scale_fill_brewer(palette = "Spectral")
plot(g)
ggplot(selectdata,aes(assessment),color = times) + scale_fill_brewer(palette = "Spectral")
theme_set(theme_classic())
ggplot(selectdata,aes(assessment),color = times) + scale_fill_brewer(palette = "Spectral")
ggplot(selectdata,aes(assessment))
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
mydataframe$frqeuency <- mapply(GetFrequency,mydataframe&times)
}
GetFrequency <- function(times){
if(times>=5){
return("five")
}
if(times == 4){
return("four")
}
if(times == 3){
return("three")
}
if(times == 2){
return("twice")
}
if(times == 1){
return("once")
}
}
mydataframe$lastnum <- mapply(GetLastnum, mydataframe$目前平均吸煙量.支.天..1.,mydataframe$目前平均吸煙量.支.天..2.,
mydataframe$目前平均吸煙量.支.天..3.,mydataframe$目前平均吸煙量.支.天..4.,
mydataframe$目前平均吸煙量.支.天..5.,mydataframe$目前平均吸煙量.支.天..6.)
mydataframe$assessment <- mapply(GetAssessment,mydataframe$times,mydataframe$lastnum)
mydataframe$frqeuency <- mapply(GetFrequency,mydataframe&times)
mydataframe$frqeuency <- mapply(GetFrequency,mydataframe$times)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
theme_set(theme_classic())
g <- ggplot(data_select,aes(平米月租)) + scale_fill_brewer(palette = "Spectral") +
geom_histogram(aes(fill = 房屋结构),
bindwidth = .1,
col = "black",
size = .1)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
install.packages(ggmap)
install.packages('ggmap')
install.packages('mapproj')
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
install.packages('devtools')
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
install.packages('dplyr')
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
citation("ggmap")
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
library(devtools)
register_google(key = "AIzaSyCYIbzoIJnDaWbTjYg2do0cJvnK",day_limit = 1000)
ggmap_credentials()
map <- get_googlemap(location='Beijing')
map <- get_map(location='Beijing')
map <- get_map(location='Los Angeles',zoom = 14)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
head(mydata[c('Category','DayOfWeek','PdDistrict','X','Y','Year')])
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week3/hw_3/map.R', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
mode(selectdata$frequency)
mode(selectdata$frequency[2])
g <- ggplot(selectdata,aes(assessment)) +
geom_histogram(bins = 5,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
plot(g)
#ggplot(selectdata,aes(x = times, y = assessment)) + geom_point()
ggplot(selectdata,aes(x = assessment))+geom_histogram(bins = 5)
binwidth=.5
binwidth=.5
binwidth=.5
#ggplot(selectdata,aes(x = times, y = assessment)) + geom_point()
ggplot(selectdata,aes(x = assessment))+geom_histogram(binwidth=.5)
#ggplot(selectdata,aes(x = times, y = assessment)) + geom_point()
ggplot(selectdata,aes(x = assessment))+geom_histogram(bins=5)
#ggplot(selectdata,aes(x = times, y = assessment)) + geom_point()
ggplot(selectdata,aes(x = assessment))+geom_histogram(binwidth=.5)
ggplot(selectdata,aes(x = times, y = assessment)) + geom_point()
ggplot(selectdata,aes(x =assessment , y =times )) + geom_point()
ggplot(selectdata,aes(x =assessment , y =times )) + geom_point(size = 0.5)
ggplot(selectdata,aes(x =assessment , y =times )) + geom_point(size = 3)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
ggplot(effectivedata,aes(assessment)) +
geom_histogram(aes(fill = 處方品名.1.),binwidth = 0.5,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
ggplot(effectivedata,aes(assessment)) +
geom_histogram(aes(fill = 處方品名.1.),binwidth = 1.0,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
ggplot(effectivedata,aes(assessment)) +
geom_histogram(aes(fill = 處方品名.1.),binwidth = 2.0,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
ggplot(effectivedata,aes(assessment)) +
geom_histogram(aes(fill = 處方品名.1.),bins = 6,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
ggplot(effectivedata,aes(assessment)) +
geom_histogram(aes(fill = 處方品名.1.),bins = 6,
col = "black",
size = .1) +  # change binwidth
labs(title="Medicine type and assessment")
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
mydataframe[, -which(apply(mydataframe,2,function(x)all(is.na(x))))]
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
View(mydataframe)
mydataframe[, -which(apply(mydataframe,2,function(x)!all(is.na(x))))]
View(mydataframe)
mydataframe <-mydataframe[, -which(apply(mydataframe,2,function(x)!all(is.na(x))))]
View(mydataframe)
mydataframe <-mydataframe[, -which(apply(mydataframe,2,function(x)all(is.na(x))))]
View(mydataframe)
mydataframe <-mydataframe[, -which(apply(mydataframe,2,function(x)!all(is.na(x))))]
View(mydataframe)
library(ggplot2)
workbook <- "C:\\Users\\Harold\\Desktop\\台大医院\\NTUH.xlsx"
mydataframe <- read.xlsx(workbook,sheetIndex = 1,encoding = 'UTF-8')
mydataframe <-mydataframe[, -which(apply(mydataframe,2,function(x)!all(is.na(x))))]
View(mydataframe)
mydataframe <-mydataframe[, apply(mydataframe,2,function(x)!all(is.na(x)))]
View(mydataframe)
library(xlsx)
library(ggplot2)
workbook <- "C:\\Users\\Harold\\Desktop\\台大医院\\NTUH.xlsx"
mydataframe <- read.xlsx(workbook,sheetIndex = 1,encoding = 'UTF-8')
mydataframe <-mydataframe[, apply(mydataframe,2,function(x)!all(is.na(x)))]
View(mydataframe)
effectivedata <- mydataframe[mydataframe$times>1,]
View(mydataframe)
#新增最后一次日均吸烟量
mydataframe$lastnum <- mapply(GetLastnum, mydataframe$目前平均吸煙量.支.天..1.,mydataframe$目前平均吸煙量.支.天..2.,
mydataframe$目前平均吸煙量.支.天..3.,mydataframe$目前平均吸煙量.支.天..4.,
mydataframe$目前平均吸煙量.支.天..5.,mydataframe$目前平均吸煙量.支.天..6.)
mydataframe$assessment <- mapply(GetAssessment,mydataframe$times,mydataframe$lastnum)
mydataframe$class <- mapply(GetClass,mydataframe$assessment)
mydataframe$frequency <- mapply(GetFrequency,mydataframe$times)
GetClass <- function(assessment){
if(assessment == 0){
return("A")
}else if(assessment < 5){
return("B")
}else if(assessment < 10){
return("C")
}else{
return("D")
}
}
#新增最后一次日均吸烟量
mydataframe$lastnum <- mapply(GetLastnum, mydataframe$目前平均吸煙量.支.天..1.,mydataframe$目前平均吸煙量.支.天..2.,
mydataframe$目前平均吸煙量.支.天..3.,mydataframe$目前平均吸煙量.支.天..4.,
mydataframe$目前平均吸煙量.支.天..5.,mydataframe$目前平均吸煙量.支.天..6.)
mydataframe$assessment <- mapply(GetAssessment,mydataframe$times,mydataframe$lastnum)
mydataframe$class <- mapply(GetClass,mydataframe$assessment)
mydataframe$frequency <- mapply(GetFrequency,mydataframe$times)
View(mydataframe)
g <- ggplot(selectdata,aes(assessment)) +
geom_histogram(aes(fill = frequency),bins = 5,
col = "black",
size = .1) +  # change binwidth
labs(title="Histogram with Auto Binning",
subtitle="Engine Displacement across Vehicle Classes")
plot(g)
Medicine1data <- selectdata[selectdata$處方品名.1. == "Nicorette Freshmint medicated Chewing Gum 2mg",]
theme_set(theme_classic())
pie <- ggplot(Medicine1data, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: Medicine1data")
pie + coord_polar(theta = "y", start=0)
pie + coord_polar(theta = "y", start=0)
#pie + coord_polar(theta = "y", start=0)
ggplot(pie)
pie <- ggplot(Medicine1data, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: Medicine1data")+coord_polar(theta = "y", start=0)
ggplot(pie)
plot(pie)
pie <- ggplot(Medicine1data, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: Medicine1data")+coord_polar(theta = "y", start=0)
pie
#plot(pie)
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
#plot(pie)
ggplot(Medicine1data, aes( fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
#plot(pie)
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
categ_table
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
Medicine1data <- effectivedata[effectivedata$處方品名.1. == "Nicorette Freshmint medicated Chewing Gum 2mg",]
Medicine2data <- effectivedata[effectivedata$處方品名.1. == "Nicotinell TTS 30" | selectdata$處方品名.1. == "Nicotinell TTS 20",]
Medicine1data <- effectivedata[effectivedata$處方品名.1. == "Nicorette Freshmint medicated Chewing Gum 2mg",]
Medicine2data <- effectivedata[effectivedata$處方品名.1. == "Nicotinell TTS 30" | selectdata$處方品名.1. == "Nicotinell TTS 20",]
Medicine3data <- effectivedata[effectivedata$處方品名.1. == "Champix film coated tablet 1.0mg",]
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine3data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$category <- factor(rep(names(categ_table), categ_table))
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Nicorette Freshmint medicated Chewing Gum 2mg",caption = "Source: Medicine1data" )
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Nicorette Freshmint medicated Chewing Gum 2mg",caption = "Source: Medicine1data" )
var <- Medicine3data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Champix film coated tablet 1.0mg",caption = "Source: Medicine1data" )
df1_1 <- Medicine1data[Medicine1data$assessment == 0,]
df1_2 <- Medicine1data[Medicine1data$assessment >0 &Medicine1data$assessment<5,]
df1_3 <- Medicine1data[Medicine1data$assessment >5 &Medicine1data$assessment<10,]
df1_4 <- Medicine1data[Medicine1data$assessment >10,]
df2_1 <- Medicine2data[Medicine2data$assessment == 0,]
df2_2 <- Medicine2data[Medicine2data$assessment >0 &Medicine2data$assessment<5,]
df2_3 <- Medicine2data[Medicine2data$assessment >5 &Medicine2data$assessment<10,]
df2_4 <- Medicine2data[Medicine2data$assessment >10,]
df3_1 <- Medicine3data[Medicine3data$assessment == 0,]
df3_2 <- Medicine3data[Medicine3data$assessment >0 &Medicine3data$assessment<5,]
df3_3 <- Medicine3data[Medicine3data$assessment >5 &Medicine3data$assessment<10,]
df3_4 <- Medicine3data[Medicine3data$assessment >10,]
write.csv(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院")
write.csv(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
library(data.table)
install.packages('data.table')
library(data.table)
install.packages("data.table")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
install.packages("data.table")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
library(data.table)
install.packages('data.table')
library(data.table)
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
install.packages('readxl')
setwd("C:\Users\Harold\Documents\GitHub\Data-Science-and-programing\week4\hw_4")
setwd("C:\\Users\\Harold\\Documents\\GitHub\\Data-Science-and-programing\\week4\\hw_4")
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', echo=TRUE)
install.packages('zoo')
install.packages('plyr')
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
temp <- gsub("[0-9|\\.|\\-]","",keywords(x,keys))
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
jobdf <- read_excel("jobdata.xlsx",sheet = 1)
jobdf <- jobdf[,c("scale","scale2","salary","title","experience",
"education","campany","description","phase","city" )]
mydata <- jobdf
mydata$description <- toupper(mydata$description)
mydata$description <- gsub('以上学历|优先|岗位职责|年','',mydata$description)
mydata$description <- gsub('数据|中|相关','',mydata$description)
keys <- worker(type = "keywords",
user ="jieba.dict",
topn = 30,
encoding = 'UTF-8',
stop_word ="C:/Users/Harold/Documents/R/win-library/3.5/jiebaRD/dict/stop_words.utf8")
keyword.list <- lapply(mydata$description,function(x){
temp <- gsub("[0-9|\\.|\\-]","",keywords(x,keys))
temp <- temp[temp!=""]
return(temp)
})
keyword.list <- unlist(keyword.list)
finalkeyword <- topsort(keyword.list)
str(finalkeyword)
wordcloud2(finalkeyword,size = 0.9,fontFamily = '微软雅黑')
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
