source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
mapply(collecturl1,10:31)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
mapply(collecturl1,4)
mapply(collecturl1,4)
mapply(collecturl2,30)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/textAnylise.R', echo=TRUE)
mapply(traverseTEXT,5:30)
mapply(collecturl1,5)
mapply(traverseTEXT,5:30)
mapply(traverseTEXT,8:30)
mapply(traverseTEXT,10:30)
mapply(traverseTEXT,11:30)
mapply(collecturl2,11)
mapply(traverseTEXT,11:30)
mapply(collecturl2,12:13)
mapply(traverseTEXT,12:30)
mapply(collecturl2,13)
mapply(traverseTEXT,14:30)
mapply(collecturl2,21)
mapply(traverseTEXT,21:30)
mapply(collecturl2,24)
mapply(traverseTEXT,24:30)
mapply(collecturl2,27)
mapply(traverseTEXT,27:30)
mapply(collecturl2,27)
mapply(collecturl2,27)
mapply(collecturl2,27)
mapply(traverseTEXT,27:30)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("proxy")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("readtext")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("tidytext")
source('~/.active-rstudio-document', echo=TRUE)
rawData = readtext("text091.txt")
docs = Corpus(VectorSource(rawData$text))
# data clean
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
# words cut
keywords = read.csv("keywords.csv")
jieba_tokenizer = function(d){
unlist(segment(d[[1]], mixseg))
}
seg = lapply(docs, jieba_tokenizer)
# words cut
# keywords = read.csv("keywords.csv")
mixseg = worker()
jieba_tokenizer = function(d){
unlist(segment(d[[1]], mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
d.corpus <- Corpus(VectorSource(seg))
tdm <- TermDocumentMatrix(d.corpus)
print( tf <- as.matrix(tdm) )
DF <- tidy(tf)
# tf-idf computation
N = tdm$ncol
tf <- apply(tdm, 2, sum)
idfCal <- function(word_doc)
{
log2( N / nnzero(word_doc) )
}
idf <- apply(tdm, 1, idfCal)
doc.tfidf <- as.matrix(tdm)
for(x in 1:nrow(tdm))
{
for(y in 1:ncol(tdm))
{
doc.tfidf[x,y] <- (doc.tfidf[x,y] / tf[y]) * idf[x]
}
}
findZeroId = as.matrix(apply(doc.tfidf, 1, sum))
tfidfnn = doc.tfidf[-which(findZeroId == 0),]
write.csv(tfidfnn, "show.csv")
View(doc.tfidf)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
